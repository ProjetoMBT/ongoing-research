IDL -------------------------
	O OMG Interface Definition Language (IDL), é uma linguagem de descrição utilizada para descrição de ligações entre objetos e objetos independente da implementação. A interface define até mesmo os parametros utilizados para tal operação. A linguagem necessita que o desenvolvedor utilize interfaces de operação.
	A versão do Java ™ 2 Platform Standard Edition 5.0 inclui -idlj-, que é um compilador que consegue ler um arquivo com extensão IDL, e o traduz ou mapeia para uma interface java. Dependendo das opções de linha de comando usadas, o compilador gera stub, skeleton, helper, holder e outros arquivos conforme o necessário. Onde estes arquivos são gerados a partir de um arquivo com extensão IDL.
	Essa interoperabilidade é possível porquê o o IDL é baseado no CORBA. Uma característica crucial do CORBA é o IDL uma linguagem de linguagem neutra. Onde cada linguagem que possui um suporte ao CORBA possui um mapeamento IDL próprio.
	Para a interação destes objetos o Java IDL fornece um Object Request Broker ou ORB. Sendo que este é uma biblioteca de classes que vai permitir uma comunicação em baixo nível entre aplicativos Java IDL com outros aplicativos que dão suporte ao CORBA.
	Os arquivos gerados pelo compilador idjl é baseado no CORBA por isto é necessário entender algo sobre, e utilizar somente o que é necessário para o seu interesse. São gerados arquivos e rodam na máquina do cliente, como referência de objetos que contém métodos stubs métodos esses incorporados dentro da ORB, e também contem o skeleton que é o arquivo que roda do lado do servidor, arquivo responsável pelo entendimento e reconhecimento do objeto e a chamada do método no objeto real na máquina do cliente, com isto temos uma chamada independente da linguagem final.
	Na notação a palavra chave "module" equivale ao pacote do java e as interfaces as interfaces também presentes no java, os ";" são utilizados para terminar algo, ou seja, como é possível conter vários pacotes os ";" também vão depois dos "}" do module e das interfaces. Algo semelhante ao utilizado já em linguagens baseados em C.
	Benefícios: Conversões de código facilitadas, Software híbrido caso aconteça uma necessidade. A Facilidade na codificação após especificação das interfaces, devido a geração dos esqueletos. Migração para o ambiente Web facilitada, podendo utilizar a arquitetura CORBA para tal tarefa caso a necessidade.
CORBA-------------------------
	Muito utilizado em CORBA (Commom object request broker architecture), que é uma especificação OMA(Object management architecture) com o objetivo de conter interoperabilidade (comunicação transparente) entre diferentes SO e linguagens de programação através de ORB's, estas são estruturas permitem que programadores façam chamadas de um computador pro outro através de uma rede.
	Para o CORBA funcionar o ORB é elementar, que tem como objetivo facilitar a comunicação dos objetos. Provendo IOR(Interoperable Object Reference), o ORB consegue localizar os objetos destinhos e transmitir informação para uma das invocações de métodos remotos(RMI).
